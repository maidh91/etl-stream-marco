---
version: '2'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:4.1.1
    ports:
      - "2181:2181"
    network_mode: host
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:4.1.1
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    network_mode: host
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'localhost:2181'
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  schema-registry:
    image: confluentinc/cp-schema-registry:4.1.1
    depends_on:
      - zookeeper
      - kafka
    ports:
      - "8081:8081"
    network_mode: host
    environment:
      SCHEMA_REGISTRY_HOST_NAME: localhost
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'localhost:2181'

  connect:
    image: confluentinc/cp-kafka-connect:4.1.1
    depends_on:
      - zookeeper
      - kafka
      - schema-registry
    ports:
      - "28083:28083"
    network_mode: host
    environment:
      CONNECT_BOOTSTRAP_SERVERS: 'localhost:9092'
      CONNECT_REST_ADVERTISED_HOST_NAME: localhost
      CONNECT_REST_PORT: 28083
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: 'http://localhost:8081'
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: 'http://localhost:8081'
      CONNECT_INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_REST_ADVERTISED_HOST_NAME: 'localhost'
      CONNECT_ZOOKEEPER_CONNECT: 'localhost:2181'
      CLASSPATH: /usr/share/java/monitoring-interceptors/monitoring-interceptors-4.1.1.jar
      CONNECT_PRODUCER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor"
      CONNECT_CONSUMER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor"
      CONNECT_PLUGIN_PATH: /usr/share/java
      CONNECT_LOG4J_LOGGERS: org.apache.zookeeper=ERROR,org.I0Itec.zkclient=ERROR,org.reflections=ERROR
      STANDALONE_NAME: test-sink
      STANDALONE_CONNECTOR_CLASS: io.confluent.connect.jdbc.JdbcSinkConnector
      STANDALONE_TASKS_MAX: 1
      STANDALONE_TOPICS: orders
      STANDALONE_CONNECTION_URL: 'jdbc:sqlite:test.db'
      STANDALONE_AUTO_CREATE: 'true'
    volumes:
      - ./mysql-connector-java-5.1.38.jar:/usr/share/java/mysql-connector-java.jar
      - ./scala-library-2.12.6.jar:/tmp/scala-library.jar
      - ./kafka-test_2.12-0.1.jar:/tmp/kafka-test.jar
      - ./main.sh:/tmp/main.sh
      - ./start_etl_stream.sh:/tmp/start_etl_stream.sh
      - ./start_sqlite_sink_connector.sh:/tmp/start_sqlite_sink_connector.sh
    command: 'bash /tmp/main.sh'
